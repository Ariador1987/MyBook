// <auto-generated />
using System;
using BookAPI.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookAPI.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211209113007_InitialModel")]
    partial class InitialModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BookAPI.Domain.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoverUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateRead")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "First Author",
                            CoverUrl = "https...",
                            DateAdded = new DateTime(2021, 12, 9, 12, 30, 7, 498, DateTimeKind.Local).AddTicks(8252),
                            DateRead = new DateTime(2021, 11, 29, 12, 30, 7, 498, DateTimeKind.Local).AddTicks(8215),
                            Description = "1st Book Description",
                            Genre = "Biography",
                            IsRead = true,
                            Rating = 4,
                            Title = "1st Book Title"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Second Author",
                            CoverUrl = "https...",
                            DateAdded = new DateTime(2021, 12, 9, 12, 30, 7, 498, DateTimeKind.Local).AddTicks(8260),
                            DateRead = new DateTime(2021, 11, 29, 12, 30, 7, 498, DateTimeKind.Local).AddTicks(8256),
                            Description = "2nd Book Description",
                            Genre = "Biography",
                            IsRead = true,
                            Rating = 4,
                            Title = "2nd Book Title"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Third Author",
                            CoverUrl = "https...",
                            DateAdded = new DateTime(2021, 12, 9, 12, 30, 7, 498, DateTimeKind.Local).AddTicks(8264),
                            DateRead = new DateTime(2021, 11, 29, 12, 30, 7, 498, DateTimeKind.Local).AddTicks(8260),
                            Description = "3rd Book Description",
                            Genre = "Biography",
                            IsRead = true,
                            Rating = 3,
                            Title = "3rd Book Title"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
